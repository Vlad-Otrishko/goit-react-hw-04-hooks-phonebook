{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","reset","className","s","form","preventDefault","wrapper","htmlFor","input","type","pattern","title","required","id","onChange","submitButton","Contact","record","spacing","ContactList","visibleList","onDelete","list","map","item","line","deleteButton","onClick","Filter","onFilter","filterLabel","filter","App","initial","JSON","parse","window","localStorage","getItem","contacts","setContacts","setFilter","useEffect","setItem","stringify","container","headline","newRecord","normalizedNewName","toLowerCase","some","alert","normalizedFilter","contact","includes","getFilteredContacts","toDeleteId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85a35a82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__uO_1l\",\"App-logo\":\"App_App-logo__3OVMU\",\"App-logo-spin\":\"App_App-logo-spin__VGbzw\",\"App-header\":\"App_App-header__mvNqS\",\"App-link\":\"App_App-link__At5KJ\",\"headline\":\"App_headline__1flgr\",\"container\":\"App_container__3_5VI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1aWrb\",\"filterLabel\":\"Filter_filterLabel__2Tnib\"};","import {useState} from 'react';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactForm = ({onSubmit})=> {\r\n  // state = {\r\n  //   name: '',\r\n  //   number: '',\r\n  // };\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default: return;\r\n    }\r\n  };\r\n const  handleSubmit = e => {\r\n    e.preventDefault();\r\n   onSubmit({ name, number });\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n      setName('');\r\n      setNumber('');\r\n  };\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <div className={s.wrapper}>\r\n          <label htmlFor={nameInputId}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={nameInputId}\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor={numberInputId}>\r\n            Phone Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={numberInputId}\r\n              value={number}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button className={s.submitButton } type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport s from './Contact.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contact = ({ name, number }) => {\r\n    return (\r\n      <p className={s.record}>\r\n        <span className={s.name}> {name}</span> <span className={s.spacing}>:</span>\r\n        <span className={s.number}>{number}</span>\r\n      </p>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport Contact from '../Contact/Contact';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ visibleList, onDelete }) => {\r\n    return (\r\n      <ul className={s.list}>\r\n        {visibleList.map(item => (\r\n          <li key={item.id} className={s.line}>\r\n            <Contact\r\n              name={item.name}\r\n              number={item.number}\r\n              onDelete={onDelete}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className={s.deleteButton}\r\n              onClick={()=>onDelete(item.id)}\r\n            ></button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n\r\n};\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  visibleList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })),\r\n  onDelete: PropTypes.func,\r\n};\r\n","import React from 'react'\r\nimport s from './Filter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({value, onFilter}) => {\r\n    return(\r\n    <label className={s.filterLabel}>\r\n        Search by name\r\n            <input type=\"text\" className={s.filter} value={value} onChange={onFilter}/>\r\n        </label>\r\n        )\r\n}\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n};\r\n","\nimport { useState, useEffect} from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter';\nimport s from'./App.module.css';\n\nconst App = () => {\n  // значение \"по умолчанию\" для контактов\n  const initial = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ];\n  // задаем useState для contacts и Filter\n  // для State contact - \"ленивая инициализация\". Начальное значение либо берется из localStorage,\n  // либо из initial, при этосм проверка осуществляется только при первом рендере\n  const [contacts, setContacts] = useState(() =>\n    JSON.parse(window.localStorage.getItem('phonebookContacts')) ?? initial);\n  const [filter, setFilter] = useState('');\n// функция добавления контактов, полученных из ContactForm\n  const formSubmitHandler = newRecord => {\n    const normalizedNewName = newRecord.name.toLowerCase();\n    const isUnique = !contacts.some(({ name }) =>\n      name.toLowerCase() === normalizedNewName);\n    if (!isUnique) {\n      alert('THIS NAME IS ALREADY PRESENT IN A PHONEBOOK');\n      return\n    }\n      newRecord.id = shortid.generate();\n    return setContacts([...contacts, newRecord]);\n  }\n  // Запись обновленного массива контактов в localStorage\n  useEffect (()=>{\n    window.localStorage.setItem('phonebookContacts', JSON.stringify(contacts));\n    },[contacts]\n  )\n\n// установка значения фильтра ()\n  const updateFilter = (e) => {\n    setFilter (e.currentTarget.value);\n  };\n  // фильтруем имеющиеся контакты на основании значения фильтра, после чего будет отрендерен отфильтрованный перечень\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n  contact.name.toLowerCase().includes(normalizedFilter));\n  }\n\n  const deleteContact = toDeleteId => {\n    setContacts(contacts.filter(contact => contact.id !== toDeleteId));\n  }\n  \n    return (\n      <div className={s.container}>\n        <h1 className={s.headline}>Phone book</h1>\n        <ContactForm onSubmit={formSubmitHandler} />\n        <h2 className={s.headline}>Contacts</h2>\n        <Filter value={filter} onFilter={updateFilter} />\n        <ContactList\n          visibleList={getFilteredContacts()}\n          onDelete={deleteContact}\n        />\n      </div>\n    );\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1_QSw\",\"wrapper\":\"ContactForm_wrapper__1e5It\",\"input\":\"ContactForm_input__38XJe\",\"submitButton\":\"ContactForm_submitButton__2FEeh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"record\":\"Contact_record__20BV_\",\"name\":\"Contact_name__3KeMU\",\"number\":\"Contact_number__1O9g-\",\"spacing\":\"Contact_spacing__2-0vz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__-gWDv\",\"line\":\"ContactList_line__3iM58\",\"deleteButton\":\"ContactList_deleteButton__2ckU1\"};"],"sourceRoot":""}